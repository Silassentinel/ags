---
export interface Props {
  items: Array<{
    title: string;
    id: string;
    subtitle?: string;
  }>;
  maxItems?: number;
}

const { items, maxItems = 3 } = Astro.props;
const limitedItems = items.slice(0, maxItems);
---

<div class="brutalist-sub-menu">
  <div class="menu-container">
    {limitedItems.map((item) => (
      <a href={`#${item.id}`} class="menu-item highlight-in-viewport">
        <span class="item-title">{item.title}</span>
        {item.subtitle && <span class="item-subtitle">{item.subtitle}</span>}
      </a>
    ))}
  </div>
</div>

<style>
  .brutalist-sub-menu {
    position: sticky;
    top: 20px;
    z-index: 10;
    margin: 2rem 0;
  }
  
  .menu-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
    padding: 15px;
    background-color: #fff;
    border: 2px solid #000;
  }
  
  .menu-item {
    display: block;
    padding: 10px;
    border: 1px solid #000;
    text-decoration: none;
    color: #000;
    font-family: monospace;
    text-transform: uppercase;
    transition: all 0.3s ease;
  }
  
  .menu-item:hover {
    background-color: #000;
    color: #fff;
  }
  
  .item-title {
    display: block;
    font-weight: bold;
    margin-bottom: 5px;
  }
  
  .item-subtitle {
    display: block;
    font-size: 0.8em;
    opacity: 0.8;
  }
  
  .menu-item.content-highlighted {
    background-color: #000;
    color: #fff;
    transform: scale(1.05);
  }
  
  /* Dark mode styles */
  :global(.dark) .menu-container {
    background-color: #000;
    border-color: #fff;
  }
  
  :global(.dark) .menu-item {
    border-color: #fff;
    color: #fff;
  }
  
  :global(.dark) .menu-item:hover,
  :global(.dark) .menu-item.content-highlighted {
    background-color: #fff;
    color: #000;
  }
  
  @media (min-width: 768px) {
    .menu-container {
      flex-direction: row;
      justify-content: space-between;
    }
    
    .menu-item {
      flex: 1;
      text-align: center;
    }
  }
  
  @media (max-width: 767px) {
    .brutalist-sub-menu {
      position: static;
    }
  }
</style>

<!-- Submenu functionality is handled by SubMenu.tsx through ClientScripts.tsx component -->