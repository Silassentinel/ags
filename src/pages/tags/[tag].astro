---
import BaseLayout from "../../layout/BaseLayout.astro";
import BlogPost from "../../components/Blog/BlogPost.astro";

// Define interfaces for our data structure
interface Frontmatter {
    title: string;
    tags: string[];
    // Add other frontmatter properties as needed
}

interface Post {
    frontmatter: Frontmatter;
    url?: string;
    // Add other post properties as needed
}

export async function getStaticPaths() {
    const postsData = await Promise.all(
        Object.entries(import.meta.glob<{ frontmatter: Frontmatter; url?: string }>("../posts/*.md"))
            .map(([_, resolver]) => resolver())
    );
    const allPosts = postsData as Post[];
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
    ];
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.frontmatter.tags.includes(tag),
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props as { posts: Post[] };
---

<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>
    <ul>
        {
            posts &&
                posts.map((post) => (
                    <BlogPost url={post.url} title={post.frontmatter.title} />
                ))
        }
    </ul>
</BaseLayout>
